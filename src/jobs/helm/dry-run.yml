description: |+
  Helm upgrade --install --dry-run against a cluster.
parameters:
  namespace:
    default: default
    type: string
    description: Cluster namespace to deploy to.
  install-name:
    type: string
    description: The name to give the deployment.
  additional-values:
    type: string
    default: ''
    description: Additional values.yaml-files to pass to helm.
  cluster:
    default: $CLUSTER
    type: string
    description: Cluster name to connect to.
  loft-access-key:
    default: $LOFT_ACCESS_KEY
    type: string
    description: Loft.sh access key.
  loft-url:
    default: $LOFT_URL
    type: string
    description: Loft.sh deployment's domain.
  executor:
    type: executor
    default: default
  resource-class:
    type: enum
    enum: [small, medium, large, xlarge, 2xlarge]
    default: small
  repo:
    description: Nexus Helm repository URL.
    type: string
    default: $HELM_REPOSITORY_URL
  repo-name:
    type: string
    default: premiscale
    description: Repo alias (helm repo add <alias> <url>).
  project-name:
    description: Name of Helm chart to install from <repo-name>.
    type: string
  username:
    description: Nexus Helm repository username.
    type: string
    default: $HELM_USERNAME
  password:
    description: Nexus Helm repository password.
    type: string
    default: $HELM_PASSWORD
  version:
    description: Version of the package to publish (helm package --version)
    type: string
    default: $CIRCLE_TAG
resource_class: << parameters.resource-class >>
executor: << parameters.executor >>
steps:
  - checkout
  - helm/install-helm-client
  - helm-login:
      repo: << parameters.repo >>
      repo-name: << parameters.repo-name >>
      username: << parameters.username >>
      password: << parameters.password >>
  - loft-connect:
      cluster: << parameters.cluster >>
      loft-access-key: << parameters.loft-access-key >>
      loft-url: << parameters.loft-url >>
  - run:
      name: Helm install --dry-run
      command: |+
        if [ -z "<< parameters.additional-values >>" ]; then
            helm upgrade --install --namespace "<< parameters.namespace >>" --create-namespace "<< parameters.install-name >>" << parameters.repo-name >>/<< parameters.project-name >> --version << parameters.version >> \
              --values values.yaml << parameters.additional-values >> \
              --dry-run
        else
            helm upgrade --install --namespace "<< parameters.namespace >>" --create-namespace "<< parameters.install-name >>" << parameters.repo-name >>/<< parameters.project-name >> --version << parameters.version >> \
              --values values.yaml \
              --dry-run
        fi